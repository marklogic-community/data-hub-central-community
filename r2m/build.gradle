plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id "io.spring.dependency-management" version "1.0.7.RELEASE"
	id 'java'
}

group = 'com.marklogic.r2m'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8' //required for gradle to provide classes to middle-tier
//sourceCompatibility = '11'

repositories {
	maven {
		url "${project.projectDir}/offline-repository"
	}
	jcenter()
	mavenLocal()
	mavenCentral()
	maven { url "https://developer.marklogic.com/maven2/" }
	maven { url "https://plugins.gradle.org/m2/" }
}

jar {
	enabled = true
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'ch.qos.logback'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "com.marklogic:spring-batch-rdbms:1.4.2"

	//for import org.springframework.messaging.simp.SimpMessagingTemplate
	implementation 'org.springframework:spring-messaging:5.3.9'

	compile 'com.fasterxml.jackson.core:jackson-databind'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml'
	compile 'org.jetbrains.kotlin:kotlin-stdlib:1.3.70'

	// MarkLogic Client Libraries
	compile 'com.marklogic:marklogic-client-api:5.3.2'
	compile "com.marklogic:ml-javaclient-util:4.1.1"

	// Using H2 as a sample database; can pull its JDBC driver from a Maven repository
	runtimeOnly "com.h2database:h2:1.4.200"
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:8.4.0.jre8'

	// Can reference a local JDBC driver like this (Oracle, along with others, do not publish their JDBC driver to a public repo)
	runtimeOnly files("build/libs/ojdbc8.jar")

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
