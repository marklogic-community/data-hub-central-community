buildscript {
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.13.RELEASE"
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.13.RELEASE'
}
configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'ch.qos.logback'
	}
}

group 'com.marklogic'
version '5.4.2'

apply plugin: "java"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
bootJar {
	baseName = springBootJarName
	manifest {
		attributes(
			'Implementation-Title': 'R2M',
			'Implementation-Version': project.version
		)
	}
}

ext.springVersion = '5.2.13.RELEASE'
ext.springSecurityVersion = '5.2.9.RELEASE'
ext.junitPlatformVersion = '1.7.0'
ext.junitJupiterVersion  = '5.7.0'

dependencies {
	// Core dependencies needed for using Spring Batch, Spring JDBC, and marklogic-spring-batch
	compile fileTree (dir: "/code/nm-hsd-dhf/offline-repository/com/oracle/ojdbc", includes:['*.jar'])
	implementation "com.marklogic:spring-batch-rdbms:1.4.2"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.9.5"

	implementation "commons-cli:commons-cli:1.4"

	// FSnow: tried using latest (5.2.0) but that requires Java 9
	implementation group: 'com.marklogic', name: 'marklogic-client-api', version: '5.2.0'

	// Forcing Spring to use logback instead of commons-logging
	//runtimeOnly "ch.qos.logback:logback-classic:1.1.8"
	//runtimeOnly group: "org.slf4j", name: "jcl-over-slf4j", version: "1.7.22"
	//runtimeOnly group: "org.slf4j", name: "slf4j-api", version: "1.7.22"


	// Using H2 as a sample database; can pull its JDBC driver from a Maven repository
	runtimeOnly "com.h2database:h2:1.4.200"
	// https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:8.4.0.jre8'
 //        runtimeOnly 'com.oracle.ojdbc:ojdbc:ojdbc7'
	// Can reference a local JDBC driver like this (Oracle, along with others, do not publish their JDBC driver to a public repo)
	// runtimeOnly files("./path/to/ojdbc-6.jar")
 // Can reference a local JDBC driver like this (Oracle, along with others, do not publish their JDBC driver to a public repo)
	runtimeOnly files("build/libs/ojdbc8.jar")
}
test {
    useJUnitPlatform()
}
