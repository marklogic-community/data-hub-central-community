# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  cypress: cypress-io/cypress@1

jobs:
  ui:
    docker:
      - image: cypress/base:10
    environment:
      ## this enables colors in the output
      TERM: xterm
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "ui/package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "ui/package.json" }}
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - ~/.npm
            - ~/.cache
      - run: |
          cd ui
          npm run test:e2e:headless
  marklogic:
    machine: true
    steps:
      - checkout
      # start proprietary DB using private Docker image
      - run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker pull store/marklogicdb/marklogic-server:10.0-5.1-dev-centos
          docker run -d --privileged -p 0.0.0.0:7997-8002:7997-8002 -p 0.0.0.0:8010-8015:8010-8015 store/marklogicdb/marklogic-server:10.0-4-dev-centos
          ./.travis/setup-marklogic.sh
      - run: ./.travis/run-tests.sh
  middleTier:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "middle-tier/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "middle-tier/build.gradle" }}

      # run tests!
      - run: gradle test
workflows:
  build_and_test:
    jobs:
      - marklogic
      - middleTier:
          requires:
            - marklogic
      - ui
