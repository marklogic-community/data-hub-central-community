# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  cypress: cypress-io/cypress@1.25.0

jobs:
  marklogic:
    machine: true
    steps:
      - checkout
      # start proprietary DB using private Docker image
      - run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker pull store/marklogicdb/marklogic-server:10.0-5.1-dev-centos
          docker run -d --privileged -p 0.0.0.0:7997-8002:7997-8002 -p 0.0.0.0:8010-8015:8010-8015 store/marklogicdb/marklogic-server:10.0-4-dev-centos
          ./.travis/setup-marklogic.sh
      - run: ./.travis/run-tests.sh
  middleTier:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test
workflows:
  build_and_test:
    jobs:
      - marklogic
      - middleTier:
          requires:
            - marklogic
      - cypress/install:
          cache-key: >-
              cache-{{ arch }}-{{ .Branch }}-{{ checksum "ui/package.json"
              }}
          working_directory: ui
      - cypress/run:
          requires:
            - cypress/install
          cache-key: >-
            cache-{{ arch }}-{{ .Branch }}-{{ checksum "ui/package.json"
            }}
          working_directory: ui
          executor: cypress/base:latest
          record: true        # record results on Cypress Dashboard
          parallel: true      # split all specs across machines
          parallelism: 4      # use 4 CircleCI machines to finish quickly
          group: 'UI Tests'  # name this group "all tests" on the dashboard
          start: 'npm run serve:e2e'  # start server before running tests
          wait-on: 'http://localhost:9999'
